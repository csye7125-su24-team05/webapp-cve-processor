package helper

import (
	"encoding/json"
	"fmt"
	"io"
	"net/http"
	"os"

	"github.com/csye7125-su24-team05/webapp-cve-processor/app/models"
)

func DownloadFile(filepath string, url string) error {
	resp, err := http.Get(url)
	if err != nil {
		return err
	}
	defer resp.Body.Close()

	out, err := os.Create(filepath)
	if err != nil {
		return err
	}
	defer out.Close()

	_, err = io.Copy(out, resp.Body)
	return err
}

func ProcessFile(file io.ReadCloser) (models.CVE, error) {
	defer file.Close()
	var cveData map[string]interface{}
	if err := json.NewDecoder(file).Decode(&cveData); err != nil {
		return models.CVE{}, fmt.Errorf("error decoding JSON from file %v", err)
	}
	if cveData == nil {
		return models.CVE{}, fmt.Errorf("no data found in file")
	}
	if cveMetadata, ok := cveData["cveMetadata"].(map[string]interface{}); ok {
		dateUpdated, ok := cveMetadata["dateUpdated"].(string)
		if !ok {
			dateUpdated = cveMetadata["datePublished"].(string)
		}
		cve := models.CVE{
			CveID:   cveMetadata["cveId"].(string),
			CveData: cveData,
			Version: dateUpdated,
		}
		return cve, nil
	}

	return models.CVE{}, fmt.Errorf("cveMetadata.version is missing or not in the expected format")

}
